{
  "address": "0x73E4a494243710CE243474Db6D43d3c3971C97c7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMisoTokenFactory",
          "name": "_misoTokenFactory",
          "type": "address"
        },
        {
          "internalType": "contract IPointList",
          "name": "_pointListFactory",
          "type": "address"
        },
        {
          "internalType": "contract IMisoLauncher",
          "name": "_misoLauncher",
          "type": "address"
        },
        {
          "internalType": "contract IMisoMarket",
          "name": "_misoMarket",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "misoLauncher",
      "outputs": [
        {
          "internalType": "contract IMisoLauncher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "misoMarket",
      "outputs": [
        {
          "internalType": "contract IMisoMarket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "misoTokenFactory",
      "outputs": [
        {
          "internalType": "contract IMisoTokenFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pointListFactory",
      "outputs": [
        {
          "internalType": "contract IPointList",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "tokenFactoryData",
          "type": "bytes"
        },
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "marketData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "launcherData",
          "type": "bytes"
        }
      ],
      "name": "prepareMiso",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xecd6aeba453010bd1bc22a656c2e0807adbb1dd29afdc6c834aab71160d5f3dd",
  "receipt": {
    "to": null,
    "from": "0x58B4B6951e9174F153635574076241315D7d3503",
    "contractAddress": "0x73E4a494243710CE243474Db6D43d3c3971C97c7",
    "transactionIndex": 3,
    "gasUsed": "1216035",
    "logsBloom": "0x
    "blockHash": "0xe6a1f6270cab39b9909686d86fabe1bc76ad9f5f37ceb8c48e615477e041b764",
    "transactionHash": "0xecd6aeba453010bd1bc22a656c2e0807adbb1dd29afdc6c834aab71160d5f3dd",
    "logs": [],
    "blockNumber": 29430448,
    "cumulativeGasUsed": "1791550",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8EAb2052884F2fB49CD5471AEF9172D365cf59c2",
    "0x850e25844148095A1e6838d23FcA9E4ea8d2448f",
    "0x15b7E03d421DB845DDd83ACebeBDDd512A02b611",
    "0xD84F225EbFEb07B2A49C88AC60Bc24bD3f565B7B",
    "0xc35DADB65012eC5796536bD9864eD8773aBc74C4"
  ],
  "numDeployments": 4,
  "solcInputHash": "f6fdb6691a4185776390209d99912497",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMisoTokenFactory\",\"name\":\"_misoTokenFactory\",\"type\":\"address\"},{\"internalType\":\"contract IPointList\",\"name\":\"_pointListFactory\",\"type\":\"address\"},{\"internalType\":\"contract IMisoLauncher\",\"name\":\"_misoLauncher\",\"type\":\"address\"},{\"internalType\":\"contract IMisoMarket\",\"name\":\"_misoMarket\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"misoLauncher\",\"outputs\":[{\"internalType\":\"contract IMisoLauncher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"misoMarket\",\"outputs\":[{\"internalType\":\"contract IMisoMarket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"misoTokenFactory\",\"outputs\":[{\"internalType\":\"contract IMisoTokenFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointListFactory\",\"outputs\":[{\"internalType\":\"contract IPointList\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"tokenFactoryData\",\"type\":\"bytes\"},{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"marketData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"launcherData\",\"type\":\"bytes\"}],\"name\":\"prepareMiso\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Recipes/AuctionCreation.sol\":\"AuctionCreation\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Recipes/AuctionCreation.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../Utils/SafeTransfer.sol\\\";\\n\\ninterface IMisoTokenFactory {\\n    function createToken(\\n        uint256 _templateId,\\n        address payable _integratorFeeAccount,\\n        bytes calldata _data\\n    ) external payable returns (address token);\\n}\\n\\ninterface IPointList {\\n    function deployPointList(\\n        address _listOwner,\\n        address[] calldata _accounts,\\n        uint256[] calldata _amounts\\n    ) external payable returns (address pointList);\\n}\\n\\ninterface IMisoLauncher {\\n    function createLauncher(\\n        uint256 _templateId,\\n        address _token,\\n        uint256 _tokenSupply,\\n        address payable _integratorFeeAccount,\\n        bytes calldata _data\\n    ) external payable returns (address newLauncher);\\n}\\n\\ninterface IMisoMarket {\\n    function createMarket(\\n        uint256 _templateId,\\n        address _token,\\n        uint256 _tokenSupply,\\n        address payable _integratorFeeAccount,\\n        bytes calldata _data\\n    ) external payable returns (address newMarket);\\n\\n    function setAuctionWallet(address payable _wallet) external;\\n\\n    function addAdminRole(address _address) external;\\n\\n    function getAuctionTemplate(uint256 _templateId)\\n        external\\n        view\\n        returns (address);\\n}\\n\\ninterface IAuctionTemplate {\\n    function marketTemplate() external view returns (uint256);\\n}\\n\\n// Auction Creation Recipe\\n// 1. Create Token\\n// 2. Create Whitelist (Optional)\\n// 3. Create Auction with token address and whitelist address\\n// 4. Create Liquidity Launcher with auction and token address\\n// 5. Set destination wallet of auction to liquidity launcher\\ncontract AuctionCreation is SafeTransfer {\\n    IMisoTokenFactory public misoTokenFactory;\\n    IPointList public pointListFactory;\\n    IMisoLauncher public misoLauncher;\\n    IMisoMarket public misoMarket;\\n    address public factory;\\n\\n    constructor(\\n        IMisoTokenFactory _misoTokenFactory,\\n        IPointList _pointListFactory,\\n        IMisoLauncher _misoLauncher,\\n        IMisoMarket _misoMarket,\\n        address _factory\\n    ) public {\\n        misoTokenFactory = _misoTokenFactory;\\n        pointListFactory = _pointListFactory;\\n        misoLauncher = _misoLauncher;\\n        misoMarket = _misoMarket;\\n        factory = _factory;\\n    }\\n\\n    function prepareMiso(\\n        bytes memory tokenFactoryData,\\n        address[] memory _accounts,\\n        uint256[] memory _amounts,\\n        bytes memory marketData,\\n        bytes memory launcherData\\n    ) external payable {\\n        require(_accounts.length == _amounts.length, \\\"!len\\\");\\n\\n        address token = createToken(tokenFactoryData);\\n\\n        address pointList = createPointList(_accounts, _amounts);\\n\\n        (address newMarket, uint256 tokenForSale) = createMarket(\\n            marketData,\\n            token,\\n            pointList\\n        );\\n\\n        address newLauncher = createLauncher(\\n            launcherData,\\n            token,\\n            tokenForSale,\\n            newMarket\\n        );\\n\\n        // Miso market has to give admin role to the user, since it's set to this contract initially\\n        // to allow the auction wallet to be set to launcher once it's been deployed\\n        IMisoMarket(newMarket).addAdminRole(msg.sender);\\n\\n        // Have to set auction wallet to the new launcher address AFTER the market is created\\n        // new launcher address is casted to payable to satisfy interface.\\n        IMisoMarket(newMarket).setAuctionWallet(payable(newLauncher));\\n\\n        uint256 tokenBalanceRemaining = IERC20(token).balanceOf(address(this));\\n        if (tokenBalanceRemaining > 0) {\\n            _safeTransfer(token, msg.sender, tokenBalanceRemaining);\\n        }\\n    }\\n\\n    function createToken(bytes memory tokenFactoryData)\\n        internal\\n        returns (address token)\\n    {\\n        (\\n            uint256 _misoTokenFactoryTemplateId,\\n            string memory _name,\\n            string memory _symbol,\\n            uint256 _initialSupply\\n        ) = abi.decode(tokenFactoryData, (uint256, string, string, uint256));\\n\\n        token = misoTokenFactory.createToken(\\n            _misoTokenFactoryTemplateId,\\n            address(0),\\n            abi.encode(_name, _symbol, msg.sender, _initialSupply)\\n        );\\n\\n        IERC20(token).approve(address(misoMarket), _initialSupply);\\n        IERC20(token).approve(address(misoLauncher), _initialSupply);\\n    }\\n\\n    function createPointList(\\n        address[] memory _accounts,\\n        uint256[] memory _amounts\\n    ) internal returns (address pointList) {\\n        if (_accounts.length != 0) {\\n            pointList = pointListFactory.deployPointList(\\n                msg.sender,\\n                _accounts,\\n                _amounts\\n            );\\n        }\\n    }\\n\\n    function createMarket(\\n        bytes memory marketData,\\n        address token,\\n        address pointList\\n    ) internal returns (address newMarket, uint256 tokenForSale) {\\n        (uint256 _marketTemplateId, bytes memory mData) = abi.decode(\\n            marketData,\\n            (uint256, bytes)\\n        );\\n\\n        tokenForSale = getTokenForSale(_marketTemplateId, mData);\\n\\n        newMarket = misoMarket.createMarket(\\n            _marketTemplateId,\\n            token,\\n            tokenForSale,\\n            address(0),\\n            abi.encodePacked(\\n                abi.encode(address(misoMarket), token),\\n                mData,\\n                abi.encode(address(this), pointList, msg.sender)\\n            )\\n        );\\n    }\\n\\n    function createLauncher(\\n        bytes memory launcherData,\\n        address token,\\n        uint256 tokenForSale,\\n        address newMarket\\n    ) internal returns (address newLauncher) {\\n        (\\n            uint256 _launcherTemplateId,\\n            uint256 _liquidityPercent,\\n            uint256 _locktime\\n        ) = abi.decode(launcherData, (uint256, uint256, uint256));\\n\\n        newLauncher = misoLauncher.createLauncher(\\n            _launcherTemplateId,\\n            token,\\n            (tokenForSale * _liquidityPercent) / 10000,\\n            address(0),\\n            abi.encode(\\n                newMarket,\\n                factory,\\n                msg.sender,\\n                msg.sender,\\n                _liquidityPercent,\\n                _locktime\\n            )\\n        );\\n    }\\n\\n    function getTokenForSale(uint256 marketTemplateId, bytes memory mData)\\n        internal\\n        view\\n        returns (uint256 tokenForSale)\\n    {\\n        address auctionTemplate = misoMarket.getAuctionTemplate(\\n            marketTemplateId\\n        );\\n\\n        uint256 auctionTemplateId = IAuctionTemplate(auctionTemplate).marketTemplate();\\n\\n        if (auctionTemplateId == 1) {\\n            (, tokenForSale) = abi.decode(mData, (uint256, uint256));\\n        } else {\\n            tokenForSale = abi.decode(mData, (uint256));\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd99f37241223ac8de2e4dc1921604867a4807dc0218cd7102ff63c3e36c8a22b\",\"license\":\"UNLICENSED\"},\"contracts/Utils/SafeTransfer.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ncontract SafeTransfer {\\n\\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    /// @dev Helper function to handle both ETH and ERC20 payments\\n    function _safeTokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _safeTransferETH(_to,_amount );\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n\\n\\n    /// @dev Helper function to handle both ETH and ERC20 payments\\n    function _tokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _to.transfer(_amount);\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n\\n\\n    /// @dev Transfer helper from UniswapV2 Router\\n    function _safeApprove(address token, address to, uint value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\\n    }\\n\\n\\n    /**\\n     * There are many non-compliant ERC20 tokens... this can handle most, adapted from UniSwap V2\\n     * Im trying to make it a habit to put external calls last (reentrancy)\\n     * You can put this in an internal function if you like.\\n     */\\n    function _safeTransfer(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        // solium-disable-next-line security/no-low-level-calls\\n        (bool success, bytes memory data) =\\n            token.call(\\n                // 0xa9059cbb = bytes4(keccak256(\\\"transfer(address,uint256)\\\"))\\n                abi.encodeWithSelector(0xa9059cbb, to, amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool)))); // ERC20 Transfer failed\\n    }\\n\\n    function _safeTransferFrom(\\n        address token,\\n        address from,\\n        uint256 amount\\n    ) internal virtual {\\n        // solium-disable-next-line security/no-low-level-calls\\n        (bool success, bytes memory data) =\\n            token.call(\\n                // 0x23b872dd = bytes4(keccak256(\\\"transferFrom(address,address,uint256)\\\"))\\n                abi.encodeWithSelector(0x23b872dd, from, address(this), amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool)))); // ERC20 TransferFrom failed\\n    }\\n\\n    function _safeTransferFrom(address token, address from, address to, uint value) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\\n    }\\n\\n    function _safeTransferETH(address to, uint value) internal {\\n        (bool success,) = to.call{value:value}(new bytes(0));\\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\\n    }\\n\\n\\n}\\n\",\"keccak256\":\"0xc2af6cb1d93e3358de826e42b24bb2f108855b1b17d3f40d3da285c1e52e6bd1\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\",\"keccak256\":\"0x9e3da3bb9ec7a825414952ac7fdae2133f873608d059cb40e03ac0194cf1ca40\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516113af3803806113af833981810160405260a081101561003357600080fd5b508051602082015160408301516060840151608090940151600080546001600160a01b039586166001600160a01b031991821617909155600180549486169482169490941790935560028054928516928416929092179091556003805494841694831694909417909355600480549290931691161790556112f6806100b96000396000f3fe6080604052600436106100555760003560e01c80630b1481291461005a57806327257e091461008b578063790528d2146100a0578063b811cefc146100b5578063c45a0155146100ca578063fa18022c146100df575b600080fd5b34801561006657600080fd5b5061006f610393565b604080516001600160a01b039092168252519081900360200190f35b34801561009757600080fd5b5061006f6103a2565b3480156100ac57600080fd5b5061006f6103b1565b3480156100c157600080fd5b5061006f6103c0565b3480156100d657600080fd5b5061006f6103cf565b610391600480360360a08110156100f557600080fd5b810190602081018135600160201b81111561010f57600080fd5b82018360208201111561012157600080fd5b803590602001918460018302840111600160201b8311171561014257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561019457600080fd5b8201836020820111156101a657600080fd5b803590602001918460208302840111600160201b831117156101c757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561021657600080fd5b82018360208201111561022857600080fd5b803590602001918460208302840111600160201b8311171561024957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561029857600080fd5b8201836020820111156102aa57600080fd5b803590602001918460018302840111600160201b831117156102cb57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561031d57600080fd5b82018360208201111561032f57600080fd5b803590602001918460018302840111600160201b8311171561035057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103de945050505050565b005b6003546001600160a01b031681565b6002546001600160a01b031681565b6000546001600160a01b031681565b6001546001600160a01b031681565b6004546001600160a01b031681565b825184511461041d576040805162461bcd60e51b8152602060048083019190915260248201526310b632b760e11b604482015290519081900360640190fd5b6000610428866105c3565b905060006104368686610a67565b9050600080610446868585610b82565b91509150600061045886868486610ec6565b9050826001600160a01b0316636595171c336040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156104a957600080fd5b505af11580156104bd573d6000803e3d6000fd5b50505050826001600160a01b0316639a87222c826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561051057600080fd5b505af1158015610524573d6000803e3d6000fd5b505050506000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561057757600080fd5b505afa15801561058b573d6000803e3d6000fd5b505050506040513d60208110156105a157600080fd5b5051905080156105b6576105b6863383611061565b5050505050505050505050565b60008060608060008580602001905160808110156105e057600080fd5b815160208301805160405192949293830192919084600160201b82111561060657600080fd5b90830190602082018581111561061b57600080fd5b8251600160201b81118282018810171561063457600080fd5b82525081516020918201929091019080838360005b83811015610661578181015183820152602001610649565b50505050905090810190601f16801561068e5780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b8211156106b057600080fd5b9083019060208201858111156106c557600080fd5b8251600160201b8111828201881017156106de57600080fd5b82525081516020918201929091019080838360005b8381101561070b5781810151838201526020016106f3565b50505050905090810190601f1680156107385780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190505050935093509350935060008054906101000a90046001600160a01b03166001600160a01b031663870837d785600086863387604051602001808060200180602001856001600160a01b03168152602001848152602001838103835287818151815260200191508051906020019080838360005b838110156107d65781810151838201526020016107be565b50505050905090810190601f1680156108035780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b8381101561083657818101518382015260200161081e565b50505050905090810190601f1680156108635780820380516001836020036101000a031916815260200191505b5096505050505050506040516020818303038152906040526040518463ffffffff1660e01b815260040180848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156108dc5781810151838201526020016108c4565b50505050905090810190601f1680156109095780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561092a57600080fd5b505af115801561093e573d6000803e3d6000fd5b505050506040513d602081101561095457600080fd5b50516003546040805163095ea7b360e01b81526001600160a01b0392831660048201526024810185905290519297509087169163095ea7b3916044808201926020929091908290030181600087803b1580156109af57600080fd5b505af11580156109c3573d6000803e3d6000fd5b505050506040513d60208110156109d957600080fd5b50506002546040805163095ea7b360e01b81526001600160a01b0392831660048201526024810184905290519187169163095ea7b3916044808201926020929091908290030181600087803b158015610a3157600080fd5b505af1158015610a45573d6000803e3d6000fd5b505050506040513d6020811015610a5b57600080fd5b50949695505050505050565b60008251600014610b7c5760015460405163424599a360e01b815233600482018181526060602484019081528751606485015287516001600160a01b039095169463424599a394899389939092909160448101916084909101906020808801910280838360005b83811015610ae6578181015183820152602001610ace565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610b25578181015183820152602001610b0d565b5050505090500195505050505050602060405180830381600087803b158015610b4d57600080fd5b505af1158015610b61573d6000803e3d6000fd5b505050506040513d6020811015610b7757600080fd5b505190505b92915050565b60008060006060868060200190516040811015610b9e57600080fd5b815160208301805160405192949293830192919084600160201b821115610bc457600080fd5b908301906020820185811115610bd957600080fd5b8251600160201b811182820188101715610bf257600080fd5b82525081516020918201929091019080838360005b83811015610c1f578181015183820152602001610c07565b50505050905090810190601f168015610c4c5780820380516001836020036101000a031916815260200191505b5060405250505091509150610c618282611183565b600354604080516001600160a01b0392831660208083018290528b851683850152835180840385018152606084018552306080850152948b1660a08401523360c0808501919091528451808503909101815260e084019094528451959850909463aa1bd2f69488948d948b946000948b939261010001918291908601908083835b60208310610d015780518252601f199092019160209182019101610ce2565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310610d495780518252601f199092019160209182019101610d2a565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610d915780518252601f199092019160209182019101610d72565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518663ffffffff1660e01b815260040180868152602001856001600160a01b03168152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610e3d578181015183820152602001610e25565b50505050905090810190601f168015610e6a5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015610e8d57600080fd5b505af1158015610ea1573d6000803e3d6000fd5b505050506040513d6020811015610eb757600080fd5b50519792965091945050505050565b600080600080878060200190516060811015610ee157600080fd5b50805160208201516040909201516002549195509193509091506001600160a01b031663632cef9084896127108a8702600454604080516001600160a01b038e8116602080840191909152938116828401523360608301819052608083015260a08083018d905260c08084018d90528451808503909101815260e0808501958690528b901b6001600160e01b03191690945260e483018981529188166101048401529590940461012482018190526000610144830181905261016483019687528351610184840152835191969095939490926101a4019190850190808383895b83811015610fd9578181015183820152602001610fc1565b50505050905090810190601f1680156110065780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561102957600080fd5b505af115801561103d573d6000803e3d6000fd5b505050506040513d602081101561105357600080fd5b505198975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b602083106110de5780518252601f1990920191602091820191016110bf565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611140576040519150601f19603f3d011682016040523d82523d6000602084013e611145565b606091505b5091509150818015611173575080511580611173575080806020019051602081101561117057600080fd5b50515b61117c57600080fd5b5050505050565b60035460408051634b939ed760e01b815260048101859052905160009283926001600160a01b0390911691634b939ed791602480820192602092909190829003018186803b1580156111d457600080fd5b505afa1580156111e8573d6000803e3d6000fd5b505050506040513d60208110156111fe57600080fd5b505160408051630d9f230760e11b815290519192506000916001600160a01b03841691631b3e460e916004808301926020929190829003018186803b15801561124657600080fd5b505afa15801561125a573d6000803e3d6000fd5b505050506040513d602081101561127057600080fd5b50519050600181141561129e5783806020019051604081101561129257600080fd5b506020015192506112b8565b8380602001905160208110156112b357600080fd5b505192505b50509291505056fea264697066735822122034fb9e8f4a108401e15ccc02a38342ae89451ca4adac4b59dcb30e14c429d80864736f6c634300060c0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 19490,
        "contract": "contracts/Recipes/AuctionCreation.sol:AuctionCreation",
        "label": "misoTokenFactory",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IMisoTokenFactory)19417"
      },
      {
        "astId": 19492,
        "contract": "contracts/Recipes/AuctionCreation.sol:AuctionCreation",
        "label": "pointListFactory",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IPointList)19431"
      },
      {
        "astId": 19494,
        "contract": "contracts/Recipes/AuctionCreation.sol:AuctionCreation",
        "label": "misoLauncher",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IMisoLauncher)19447"
      },
      {
        "astId": 19496,
        "contract": "contracts/Recipes/AuctionCreation.sol:AuctionCreation",
        "label": "misoMarket",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IMisoMarket)19480"
      },
      {
        "astId": 19498,
        "contract": "contracts/Recipes/AuctionCreation.sol:AuctionCreation",
        "label": "factory",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IMisoLauncher)19447": {
        "encoding": "inplace",
        "label": "contract IMisoLauncher",
        "numberOfBytes": "20"
      },
      "t_contract(IMisoMarket)19480": {
        "encoding": "inplace",
        "label": "contract IMisoMarket",
        "numberOfBytes": "20"
      },
      "t_contract(IMisoTokenFactory)19417": {
        "encoding": "inplace",
        "label": "contract IMisoTokenFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IPointList)19431": {
        "encoding": "inplace",
        "label": "contract IPointList",
        "numberOfBytes": "20"
      }
    }
  }
}